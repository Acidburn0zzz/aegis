// forms partial
// Aegis UI (derived from Playlyfe Sandbox)
// Johny Jose / Kumar Harsh
// 23.Jan.2013

form {
  margin: 0 0 $base-line-height;
}

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $base-line-height;
  font-size: $base * 1.5;
  line-height: $base-line-height * 2;
  color: $gray-dark;
  border: 0;
  border-bottom: 1px solid $gray-lightest;
  &.small {
    font-size: $base+1 ; line-height: $base-line-height;
    border-bottom: none; margin-bottom: 5px;
  }
}


label,
input,
button,
select,
textarea {
  font: normal #{$base}/#{$base-line-height} $base-font-family;
}

.form-row {
  margin-bottom: 5px;
  // input, input[type], select, textarea, .immutable, .snippet {
  //   /* reset margins on these elements when inside a form-row */
  //   margin-bottom: 0;
  // }
  .button {
    margin-bottom: #{9px/$button-font-size}em;
  }
  @include clearfix();
  .snippet {
    // align snippets with inputs
    height: #{$input-height/$base}em;
    line-height: #{$input-height/$base}em;
    padding-top: 0; padding-bottom: 0;
    max-width: 100%;
    margin: 0 0 #{9px/$button-font-size}em;
  }
}

label {
  display: block;
  margin-bottom: 5px;
  &.optional:after {
    content: '(optional)';
    margin-left: 3px;
    color: $accent;
  }
  &.required:after {
    content: '*';
    margin-left: 3px;
    color: $accent;
  }
  &.error {
    color: $red;
  }
}

.form-errors {
  @include box-sizing('border-box');
  @extend .form-row;
  @extend .list-unstyled;
  background-color: $error-bg;
  margin: 5px 0;
  padding: $base-line-height/2;
  border: 1px solid darken($error-bg,10%);
}

.field-errors {
  @extend .list-unstyled;
  margin-left: 15px;
}

.form-errors, .field-errors {
  color: $error-color;
  li {
    margin: 2px 4px;
    position: relative;
  }
}

.field-errors {
  li:before {
    font-family: "Lyfeicons";
    position: absolute;
    left: -14px;
    display: block;
    content: "\e006";
  }
}

.field-wrapper {
  position: relative;
  *display: block;
}

.form-actions {
  @extend .field-wrapper;
  margin-top: 1em;
  .button { margin-bottom: 0; }
}

select, textarea,       input[type="text"],           input[type="password"],
input[type="datetime"], input[type="datetime-local"], input[type="date"],
input[type="month"],    input[type="time"],           input[type="week"],
input[type="number"],   input[type="email"],          input[type="url"],
input[type="search"],   input[type="tel"],            input[type="color"],
, .immutable {
  @include inline-block();
  @include box-sizing('border-box');
  @include box-shadow(inset 0 1px 2px 0px $input-shadow);
  width: 100%;
  height: #{$input-height/$base}em;
  padding: #{4px/$base}em;
  margin: 0 0 #{9px/$base}em;
  border: 1px solid $input-border;
  color: $input-color;
  line-height: #{$base-line-height/$base}em;
  &.append { border-left: none; }
  &.prepend { border-right: none; }
}

fieldset {
  padding: 0;
  margin: 0 0 $base-line-height;
  border: none;
  width: 100%;
}

.input_container {
  height: auto;
}
textarea {
  height: auto;
  resize: vertical;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  float: left;
  margin: 4px 7px 0 0;
  *margin-top: 0; /* IE7 */
  line-height: $base-line-height;
  cursor: pointer;
}

input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
  width: auto; // Override of generic input selector
}

select {
  @include border-radius(0);
  background-color: $input-bg;
  line-height: $input-height;
  height: $input-height;
}

select[multiple],
select[size] {
  height: auto;
}

// Everything else
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.input_container,
.immutable {
  background-color: $input-bg;
  @include border-radius($input-border-radius);
  @include transition(border linear .2s, box-shadow linear .2s);

  // Focus state
  &:focus {
    border-color: $input-focus-border;
    outline: 0;
    outline: thin dotted \9; /* IE6-9 */
    @include box-shadow(inset 0 1px 2px 0px lighten($input-focus-border, 30%));
  }
  &.active_container {
    border-color: $input-active-border;
    outline: 0;
    outline: thin dotted \9; /* IE6-9 */
    @include box-shadow(inset 0 1px 2px 0 lighten($input-active-border, 30%));
  }
  &.error {
    border-color: $error-border;
    outline: 0;
    outline: thin dotted \9; /* IE6-9 */
    @include box-shadow(inset 0 1px 2px 0px lighten($error-border,30%));
  }
}

// For text that needs to appear as an input but should not be an input
.immutable {
  overflow: hidden; // prevent text from wrapping, but still cut it off like an input does
  white-space: nowrap;
  text-overflow: ellipsis;
  cursor: text;
  border-color: lighten($input-disabled-color, 30%);
  @include box-shadow(inset 0 1px 2px lighten($input-disabled-color, 40%));
}

// Grid style input sizes
input, select, textarea, label,
.snippet, .immutable {
  &[class*="col-"] {
    float: none;
    margin-left: 0;
    margin-right: 0;
  }
}
.append, .prepend {
  input, .snippet, .immutable {
    &[class*="col-"] {
      @include inline-block();
    }
  }
}
.append {
  /* use .companion to extend append behaviour to other elements */
  .add-on, .button, .companion {
    margin-left: -1px;
  }
  .button { margin-right: 0; }
}
.prepend {
  .add-on, .button, .companion {
    margin-right: -1px;
  }
}

.add-on {
  @include inline-block();
  @include box-sizing('border-box');
  @include text-shadow(0 1px 0 rgba(255, 255, 255, 0.75));
  text-align: center;
  background-color: $gray-lightest;
  line-height: #{$base-line-height/$base}em;
  height: #{$input-height/$base}em;
  width: auto;
  min-width: 16px;
  padding: #{4px/$base}em;
  border: 1px solid $input-border;
}

.disabled, *[disabled] {
  @include opacity(0.65);
  @include user-select(none);
}

.form-search,
.form-inline,
.form-horizontal {
  input,
  textarea,
  select,
  .help-inline,
  .immutable,
  .prepend,
  .append {
    @include inline-block();
    margin-bottom: 0;
    vertical-align: middle;
  }
}

.form-horizontal {
  .form-errors {
    @extend .form-errors;
    margin-left: $form-horz-label-width + 20;
  }
  // only right align the form labels
  // not checkbox & radio texts
  .form-row {
    margin-bottom: 20px;
    .field-label {
      float: left;
      padding-top: 5px;
      text-align: right;
      width: $form-horz-label-width;
    }
  }
  .field-wrapper {
    *display: inline-block;
    *padding-left: 20px;
    margin-left: $form-horz-label-width + 20;
    *margin-left: 0;
    &.pad { // for wrapping checkboxes and radios
      padding-top:6px;
    }
    &:first-child {
     *padding-left: $form-horz-label-width + 20;
    }
    .field-help {
      top: 0;
    }
  }
  .append, .prepend {
    // fix for unequal widths of col-* classes
    // inside and outside .append, if the .append
    // is wrapped in a .field-wrapper
    width: 100%;
  }
}
